@version: 3.2

### Default Options ###

# Options
#
# default options
options {
  chain_hostnames(no);
  flush_lines(0);
  log_fifo_size(1000);
  stats_freq(43200);
};



### Sources ###
#
# default source
source s_log { unix-stream("/dev/log"); internal(); };

# kernel source
source s_kernel { file("/proc/kmsg" program_override("kernel: ")); };



### Filters ###
#
# filter for dropbear deamon and OpenSSH daemon
filter f_sshd { program("sshd") or program("dropbear"); };

# filter for netfilter (via ulogd)
filter f_netfilter { program("ulogd"); };

# filter for keepalived
filter f_keepalived { message("Keepalive*"); };

# filter for syslog-ng
filter f_syslogd { program("syslog-ng"); };

# filter for acpid (Event Daemon)
filter f_acpid { program("acpid"); };

# filter for ntpd (Network Time Protocol)
filter f_ntpd { program("ntpd"); };

# filter for atftpd (tftp server)
filter f_atftpd { program("atftpd"); };

# filter for portage
filter f_portage { program("portage"); };

# filter for rsnapshot
filter f_rsnapshot { message("rsnapshot*"); };

# filter for courier authdaemond
filter f_authdaemond { program("authdaemond"); };

# filter for pop3 related messages
filter f_pop3d { program("pop3d"); };

# filter for imap related messages
filter f_imapd { program("imapd"); };

# filter for postfix
filter f_mail { program("postfix"); };

# filter for slapd (LDAP daemon)
filter f_slapd  { program(slapd); };

# filter for slurpd (LDAP update replication daemon)
filter f_slurpd { program(slurpd); };

# filter for sudo activities
filter f_sudo { program(sudo); };

# filter for dovecot
filter f_dovecot { program(dovecot); };

# filter for clamd
filter f_clamd { program(clamd); };

# filter for freshclam
filter f_freshclam { program(freshclam); };

# filter for the Pure-FTP daemon
filter f_pure-ftpd { program("pure-ftpd"); };

# filter for the msmtp
filter f_msmtp { program("msmtp"); };

# filter for libvirtd
filter f_libvirtd { program(libvirtd); };

# filter for vm-manager
filter f_vm-manager { program(vm-manager); };

# filter for ZABBIX Agent daemon
filter f_zabbix-agentd { match("Zabbix Agent \(daemon\)\[[0-9]+\]"); };

# filter for ZABBIX Proxy daemon
filter f_zabbix-proxy { match("Zabbix Proxy\[[0-9]+\]"); };

# filter for FOSS-Cloud Broker Daemon
filter f_fc-brokerd { program(fc-brokerd); };

### Destinations ###
#
# default destination
destination d_messages { file("/var/log/messages"); };

# console destination
destination d_console { file("/dev/tty12"); };

# kernel destination
destination d_kernel { file("/var/log/syslog/kernel.log"); };

# sshd destination
destination d_sshd { file("/var/log/syslog/sshd.log"); };

# keepalive destination
destination d_keepalived { file("/var/log/syslog/keepalived.log"); };

# netfilter destination
destination d_netfilter { file("/var/log/syslog/netfilter.log"); };

# syslog-ng destination
destination d_syslogd { file("/var/log/syslog/syslogd.log"); };

# acpid destination
destination d_acpid { file("/var/log/syslog/acpid.log"); };

# ntpd destination
destination d_ntpd { file("/var/log/syslog/ntpd.log"); };

# atftpd (tftp server) destination
destination d_atftpd { file("/var/log/syslog/atftpd.log"); };

# portage destination
destination d_portage { file("/var/log/syslog/portage.log"); };

# rsnapshot destination
destination d_rsnapshot { file("/var/log/syslog/rsnapshot.log"); };

# courier authdaemond destination
destination d_authdaemond { file("/var/log/syslog/authdaemond.log"); };

# pop3 related messages destination
destination d_pop3d { file("/var/log/syslog/pop3d.log"); };

# imap related messages destination
destination d_imapd { file("/var/log/syslog/imapd.log"); };

# postfix (mailer like Sendmail) destination
destination d_mail { file("/var/log/syslog/mail.log"); };

# slapd (LDAP daemon) destination
destination d_slapd  { file("/var/log/syslog/slapd.log"); };

# slurpd (LDAP update replication daemon) destination
destination d_slurpd { file("/var/log/syslog/slurpd.log"); };

# sudo destination
destination d_sudo { file("/var/log/syslog/sudo.log"); };

# dovecot destination
destination d_dovecot { file("/var/log/syslog/dovecot.log"); };

# clamd destination
destination d_clamd { file("/var/log/syslog/clamd.log"); };

# freshclam destination
destination d_freshclam { file("/var/log/syslog/freshclam.log"); };

# Pure-FTPd destination
destination d_pure-ftpd { file("/var/log/syslog/pure-ftpd.log"); };

# msmtp destination
destination d_msmtp { file("/var/log/syslog/msmtp.log"); };

# libvirt destination
destination d_libvirtd { file("/var/log/syslog/libvirtd.log"); };

# vm-manager destination
destination d_vm-manager { file("/var/log/syslog/vm-manager.log"); };

# ZABBIX Agent destination
destination d_zabbix-agentd { file("/var/log/syslog/zabbix-agentd.log"); };

# ZABBIX Proxy destination
destination d_zabbix-proxy { file("/var/log/syslog/zabbix-proxy.log"); };

# FOSS-Cloud Broker Daemon
destination d_fc-brokerd { file("/var/log/syslog/fc-brokerd.log"); };

### Log paths ###
#
# log everything to the console and to the remote loghost
# log { source(s_log); source(s_kernel); destination(d_console); destination(d_loghost); };

# log everything to the console
log { source(s_log); source(s_kernel); destination(d_console); };

# log kernel path
log { source(s_kernel); destination(d_kernel); flags(final); };

# log ssh path
log { source(s_log); filter(f_sshd); destination(d_sshd); flags(final); };

# log keepalived path
log { source(s_log); filter(f_keepalived); destination(d_keepalived); flags(final); };

# log netfilter path
log { source(s_log); filter(f_netfilter); destination(d_netfilter); flags(final); };

# log syslog-ng path
log { source(s_log); filter(f_syslogd); destination(d_syslogd); flags(final); };

# log acpid (Event Daemon)
log { source(s_log); filter(f_acpid); destination(d_acpid); flags(final); };

# log ntpd (Network Time Protocol)
log { source(s_log); filter(f_ntpd); destination(d_ntpd); flags(final); };

# log atftpd (tftp server) path
log { source(s_log); filter(f_atftpd); destination(d_atftpd); flags(final); };

# log portage
log { source(s_log); filter(f_portage); destination(d_portage); flags(final); };

# log rsnapshot path
log { source(s_log); filter(f_rsnapshot); destination(d_rsnapshot); flags(final); };

# log courier authdaemond path
log { source(s_log); filter(f_authdaemond); destination(d_authdaemond); flags(final); };

# log pop3 path
log { source(s_log); filter(f_pop3d); destination(d_pop3d); flags(final); };

# log imap path
log { source(s_log); filter(f_imapd); destination(d_imapd); flags(final); };

# log postfix path
log { source(s_log); filter(f_mail); destination(d_mail); flags(final); };

# log slapd path
log { source(s_log); filter(f_slapd); destination(d_slapd); flags(final); };

# log slurpd path
log { source(s_log); filter(f_slurpd); destination(d_slurpd); flags(final); };

# log sudo path
log { source(s_log); filter(f_sudo); destination(d_sudo); flags(final); };

# log dovecot path
log { source(s_log); filter(f_dovecot); destination(d_dovecot); flags(final); };

# log clamd path
log { source(s_log); filter(f_clamd); destination(d_clamd); flags(final); };

# log freshclam path
log { source(s_log); filter(f_freshclam); destination(d_freshclam); flags(final); };

# log pure-ftpd path
log { source(s_log); filter(f_pure-ftpd); destination(d_pure-ftpd); flags(final); };

# log msmtp path
log { source(s_log); filter(f_msmtp); destination(d_msmtp); flags(final); };

# log libvirtd path
log { source(s_log); filter(f_libvirtd); destination(d_libvirtd); flags(final); };

# log vm-manager path
log { source(s_log); filter(f_vm-manager); destination(d_vm-manager); flags(final); };

# log ZABBIX Agent path
log { source(s_log); filter(f_zabbix-agentd); destination(d_zabbix-agentd); flags(final); };

# log ZABBIX Proxy path
log { source(s_log); filter(f_zabbix-proxy); destination(d_zabbix-proxy); flags(final); };

# log FOSS-Cloud Broker Daemon path
log { source(s_log); filter(f_fc-brokerd); destination(d_fc-brokerd); flags(final); };


# catch all remaining log messages (this has to be the last log path)
log { source(s_log); source(s_kernel); destination(d_messages); };
